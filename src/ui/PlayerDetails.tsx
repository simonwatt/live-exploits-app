import { Card, Text, Button, Group, Badge, List, Image, Rating } from '@mantine/core'; // Import Mantine components
import { replaceLettersWithCardHTML } from '../utils/textTransformers'; // Adjust the path accordingly

const PlayerDetails = ({ player, onEdit }) => {
  return (
    <Card shadow="sm" padding="lg" style={{ marginTop: '20px' }}>
      <Text weight={500} mb="xs">Player Details</Text>

      {/* Player Name */}
      <Text>
        <strong>Name:</strong> {player.name}
      </Text>

      {/* Description */}
      <Text>
        <strong>Description:</strong> {player.description || 'N/A'}
      </Text>

      {/* Ability Rating */}
      <Text>
        <strong>Ability:</strong>
        <Rating fractions={2} value={player.abilityRating} readOnly /> {/* Using Rating component */}
      </Text>

      {/* Tilt Control */}
      <Text>
        <strong>Emotional Control:</strong>
        <Rating fractions={2} value={player.tiltControl} readOnly /> {/* Using Rating component */}
      </Text>

      {/* Favourite Hands */}
      <Text>
        <strong>Favourite Hands:</strong>
      </Text>
      <Text dangerouslySetInnerHTML={{ __html: replaceLettersWithCardHTML(player.favouriteHands) || 'N/A' }} />

      {/* Mental Description */}
      <Text>
        <strong>Emotional Control - Notes:</strong> {player.mentalDescription || 'N/A'}
      </Text>

      {/* Visual Description */}
      <Text>
        <strong>Physical Description:</strong> {player.visualDescription || 'N/A'}
      </Text>

      {/* New fields for Ethnicity, Skin Color, etc. */}
      <Text>
        <strong>Ethnicity:</strong> {player.ethnicity || 'N/A'}
      </Text>

      <Text>
        <strong>Skin Color:</strong> {player.skinColor || 'N/A'}
      </Text>

      <Text>
        <strong>Age:</strong> {player.age || 'N/A'}
      </Text>

      <Text>
        <strong>Hair Style:</strong> {player.hairStyle || 'N/A'}
      </Text>

      <Text>
        <strong>Hair Color:</strong> {player.hairColor || 'N/A'}
      </Text>

      <Text>
        <strong>Gender:</strong> {player.gender || 'N/A'}
      </Text>

      <Text>
        <strong>Body Type:</strong> {player.bodyType || 'N/A'}
      </Text>

      <Text>
        <strong>Height:</strong> {player.height || 'N/A'}
      </Text>

      {/* Player Tags */}
      <Text>
        <strong>Tags:</strong> 
      </Text>
      <Group mt="xs">
        {player.playerTags && player.playerTags.length > 0 ? (
          player.playerTags.map((pt) => (
            <Badge key={pt.tagId} color="blue" variant="light">
              {pt.tag.name}
            </Badge>
          ))
        ) : (
          <Text size="sm" color="dimmed">No tags</Text>
        )}
      </Group>

      {/* Player Notes */}
      <Text mt="md">
        <strong>Notes:</strong>
      </Text>
      <List>
        {player.notes && player.notes.length > 0 ? (
          player.notes.map((note, index) => (
            <List.Item key={index}>
              {note}
            </List.Item>
          ))
        ) : (
          <Text size="sm" color="dimmed">No notes</Text>
        )}
      </List>

      {/* Player Image */}
      {player.image && (
        <Image
          src={player.image}
          alt="Player Image"
          width={150}
          height={150}
          radius="md"
          style={{ marginTop: '10px' }}
        />
      )}

      <Group position="right" mt="md">
        <Button onClick={onEdit}>Edit Player</Button>
      </Group>
    </Card>
  );
};

export default PlayerDetails;
