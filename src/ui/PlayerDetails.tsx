import {   Divider, Card, Text, Button, Group, Badge, List, Image, Rating, Avatar, Stack } from '@mantine/core'; 
import { replaceLettersWithCardHTML } from '../utils/textTransformers'; 
import NotesEditor from './NotesEditor'; // Import the new NotesEditor component

const PlayerDetails = ({ player, onEdit }) => {
  return (
    <Card shadow="sm" padding="lg" style={{ marginTop: '20px', maxWidth: '800px', margin: '20px auto' }}>


      {/* Player Name and Avatar */}
      <Group position="apart" mb="md">
        <Group>
          <Avatar 
            alt={player.name} 
            src={player.avatar || player.image}
            radius="xl" 
            size="lg" 
            color="blue"
          >
            {!player.avatar && player.name[0]} {/* Display initial if no avatar */}
          </Avatar>
          <Stack spacing={0}>
            <Text weight={700} size="xl">{player.name}</Text>
            <Text size="sm" color="dimmed">{player.description || 'No description available'}</Text>
          </Stack>
        </Group>
        <Button onClick={onEdit}>Edit Player</Button>
      </Group>

      {/* Player Details */}
      <Group grow spacing="sm">
        <Stack spacing="xs">
          <Text><strong>Ability:</strong> <Rating fractions={2} value={player.abilityRating} readOnly /></Text>
          <Text><strong>Emotional Control:</strong> <Rating fractions={2} value={player.tiltControl} readOnly /></Text>
        </Stack>
        <Stack spacing="xs">
          <Text><strong>Ethnicity:</strong> {player.ethnicity || 'N/A'}</Text>
          <Text><strong>Age:</strong> {player.age || 'N/A'}</Text>
          <Text><strong>Gender:</strong> {player.gender || 'N/A'}</Text>
        </Stack>
        <Stack spacing="xs">
          <Text><strong>Hair Color:</strong> {player.hairColor || 'N/A'}</Text>
          <Text><strong>Body Type:</strong> {player.bodyType || 'N/A'}</Text>
          <Text><strong>Height:</strong> {player.height || 'N/A'}</Text>
        </Stack>
      </Group>

      {/* Favourite Hands */}
      <Text mt="md"><strong>Favourite Hands:</strong></Text>
      <Text dangerouslySetInnerHTML={{ __html: replaceLettersWithCardHTML(player.favouriteHands) || 'N/A' }} />

      {/* Visual and Mental Description */}
      <Text mt="md"><strong>Physical Description:</strong> {player.visualDescription || 'N/A'}</Text>
      <Text mt="md"><strong>Emotional Control Notes:</strong> {player.mentalDescription || 'N/A'}</Text>

      {/* Tags */}
      <Text mt="md"><strong>Tags:</strong></Text>
      <Group mt="xs">
        {player.playerTags && player.playerTags.length > 0 ? (
          player.playerTags.map((pt) => (
            <Badge key={pt.tagId} color="blue" variant="light">
              {pt.tag.name}
            </Badge>
          ))
        ) : (
          <Text size="sm" color="dimmed">No tags</Text>
        )}
      </Group>


      {/* Player Image */}
      {player.image && (
        <Image
          src={player.image}
          alt="Player Image"
          width={150}
          height={150}
          radius="md"
          style={{ marginTop: '10px' }}
        />
      )}

         {/* Notes Section */}
      <Divider my="lg" />
      <NotesEditor playerId={player.id} player={player} notes={player.notes} />

    </Card>
  );
};

export default PlayerDetails;
